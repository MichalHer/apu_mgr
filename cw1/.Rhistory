help.start()
head(iris)
par(mfrow=c(2,2))
hist(iris$Sepal.Width, breaks = 20)
data(iris)
head(iris)
par(mfrow=c(2,2))
hist(iris$Sepal.Length, breaks = 20)
hist(iris$Sepal.Width, breaks = 20)
log.iris <- log(iris[, 1:4])
View(log.iris)
View(iris)
View(log.iris)
View(log.iris)
View(iris)
data(iris)
head(iris)
par(mfrow=c(2,2))
hist(iris$Sepal.Length, breaks = 20)
hist(iris$Sepal.Width, breaks = 20)
hist(iris$Petal.Length, breaks = 20)
hist(iris$Petal.Width, breaks = 20)
log.iris <- log(iris[, 1:4])
iris.species <- iris[,5]
par(mfrow = c(2,2))
hist(iris$Sepal.Length, breaks = 20)
hist(iris$Sepal.Width, breaks = 20)
hist(iris$Petal.Length, breaks = 20)
hist(iris$Petal.Width, breaks = 20)
a = 5
a
a <- 4
a
a < b
a <- 2*log(5)
b <- 3*a
a < b
a <- mapply(":",25,45)
a
a <- mapply(":",25,45)
median(a)
::median
r::median
base::median
math::median
a <- 14*cos(pi)
a
pi
b <- 2*a
b
log10.help()
log10.help.start()
help.start(log10)
help.start(log10())
?log10
v*2
v = mapply(":",900,1150)
v*2
v = mapply(":",900,1150)
mean(v^2)
mapply(":",1,3)^2
base::log
ls("base")
ls()[grep("log", ls())]
all_functions[grep("log", all_functions)]
all_functions <- ls(all.names = TRUE)
matching_functions <- all_functions[grep("log", all_functions)]
print(matching_functions)
# Używając ls() i grep()
matching_functions <- ls(pattern = "log")
# Lub używając ls.str() i grep()
matching_functions <- ls.str()[grep("log", ls.str())]
# Wyświetlenie wyników
print(matching_functions)
View(iris)
View(iris)
# wariant 5
a <- 14*cos(pi)
b <- 2*a
?log10
v = mapply(":",900,1150)
mean(v^2)
ls("package:base", pattern = "log")
setwd("/home/michal/University/apu_mgr/cw1")
a <- "lodówka turystyczna"
writeLines(a, "plik.txt")
rm(a)
a <- readLines("plik.txt")
install.packages("gridExtra")
library(gridExtra)
sleep_data <- tableGrob(head(sleep, n = 10))
grid.arrange(sleep_data)
v2 <- seq(1500, 1400, by = -5)
va <- seq(25,5)
vb <- seq(50,70)
c(vb,va)
nazwa <- paste0("Lodówka ", 1:15)
pojemnosc <- c(20, 25, 18, 22, 30, 28, 24, 26, 21, 27, 23, 19, 29, 31, 17)
waga <- c(10, 12, 9, 11, 14, 13, 10.5, 12.5, 10, 13, 11.5, 9.5, 13.5, 15, 8.5)
cena <- c(200, 220, 180, 250, 300, 280, 230, 270, 210, 290, 240, 200, 310, 330, 170)
liczba_opinii <- c(50, 45, 55, 60, 70, 65, 48, 52, 58, 62, 53, 47, 68, 75, 40)
lodowki <- data.frame(Nazwa = nazwa, Pojemnosc = pojemnosc, Waga = waga, Cena = cena, Liczba_Opinii = liczba_opinii)
lodowki
mean(lodowki$Cena)
nowa_lodowka <- data.frame(Nazwa = "Nowa Lodówka", Pojemnosc = 26, Waga = 11.8, Cena = 260, Liczba_Opinii = 50)
lodowki <- rbind(lodowki, nowa_lodowka)
lodowki
mean(lodowki$Cena)
install.packages('dplyr')
library(gridExtra)
lodowki <- dplyr::mutate(lodowki, oceny_klientow = seq(0, 5, by = 0.5))
install.packages("dplyr")
lodowki <- dplyr::mutate(lodowki, oceny_klientow = seq(0, 5, by = 0.5))
lodowki <- mutate(lodowki, oceny_klientow = rep(seq(0, 5, by = 0.5), length.out = nrow(lodowki)))
lodowki <- dplyr:mutate(lodowki, oceny_klientow = rep(seq(0, 5, by = 0.5), length.out = nrow(lodowki)))
lodowki <- dplyr::mutate(lodowki, oceny_klientow = rep(seq(0, 5, by = 0.5), length.out = nrow(lodowki)))
lodowki$oceny_klientow <- factor(lodowki$oceny_klientow, levels = seq(0, 5, by = 0.5))
srednie_ceny_ocen <- tapply(lodowki$Cena, lodowki$oceny_klientow, mean)
srednie_ceny_ocen
# Nowe dane dla lodówek
nowe_lodowki <- data.frame(Nazwa = c("Nowa1", "Nowa2", "Nowa3", "Nowa4"),
Pojemnosc = c(22, 23, 21, 24),
Waga = c(11, 10.5, 11.2, 12),
Cena = c(240, 230, 245, 250),
Liczba_Opinii = c(50, 60, 45, 70),
oceny_klientow = c(4, 3.5, 4.5, 3))
# Dodanie nowych lodówek do istniejącej ramki danych
lodowki <- rbind(lodowki, nowe_lodowki)
# Wykres słupkowy liczby reprezentantów dla każdej oceny
barplot(table(lodowki$oceny_klientow), main = "Liczba reprezentantów dla każdej oceny", xlab = "Ocena", ylab = "Liczba")
m
#m
# Wykres kołowy procentowego udziału ocen
pie(table(lodowki$oceny_klientow) / nrow(lodowki), main = "Procentowy udział ocen")
# Wykres wachlarzowy procentowego udziału ocen
barplot(prop.table(table(lodowki$oceny_klientow)), main = "Procentowy udział ocen", xlab = "Ocena", ylab = "Procent")
#m
# Wykres kołowy procentowego udziału ocen
pie(table(lodowki$oceny_klientow) / nrow(lodowki), main = "Procentowy udział ocen")
# Wykres wachlarzowy procentowego udziału ocen
barplot(prop.table(table(lodowki$oceny_klientow)), main = "Procentowy udział ocen", xlab = "Ocena", ylab = "Procent")
lodowki$status_opinii <- cut(lodowki$Liczba_Opinii, breaks = c(0, 50, 100, Inf), labels = c("nie ma", "mniej 50 opinii", "50-100 opinii", "więcej 100 opinii"))
lodowki$status_opinii <- cut(lodowki$Liczba_Opinii, breaks = c(0, 50, 100, Inf), labels = c("nie ma", "mniej 50 opinii", "50-100 opinii", "więcej 100 opinii"))
# Dodanie kolumny status_opinii
lodowki$status_opinii <- cut(lodowki$Liczba_Opinii, breaks = c(0, 50, 100, Inf), labels = c("nie ma", "mniej 50 opinii", "50-100 opinii"))
# Konwersja kolumny na cechy jakościowe
lodowki$status_opinii <- factor(lodowki$status_opinii)
# Wykres kołowy procentowego udziału statusu opinii
pie(table(lodowki$status_opinii) / nrow(lodowki), main = "Procentowy udział statusu opinii")
zdania_o_lodowkach <- paste(lodowki$Nazwa, "ma ocenę klientów", lodowki$oceny_klientow, "bo ma liczbę opinii", lodowki$Liczba_Opinii)
print(zdania_o_lodowkach)
write.csv(lodowki, "lodowki_dane.csv", row.names = FALSE)
lodowki_z_pliku <- read.csv("lodowki_dane.csv")
print(lodowki_z_pliku)
cls
clear()
